# Generated by Django 5.0.3 on 2024-04-04 07:48

import ckeditor.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('sub_title', models.CharField(max_length=200, verbose_name='Sub Title')),
                ('hero_image', models.ImageField(upload_to='assets')),
                ('button_link', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=20, verbose_name='Branch Name')),
                ('address', models.CharField(blank=True, max_length=300, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=300, verbose_name='Phone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='gallery', verbose_name='Gallery Image')),
                ('position', models.IntegerField(default=0, verbose_name='Position')),
                ('category', models.CharField(max_length=20, verbose_name='Category')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='NewsCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('headline', models.CharField(max_length=300, verbose_name='Headline')),
                ('media_logo', models.ImageField(upload_to='media_logo', verbose_name='Media Logo')),
                ('context', models.TextField(max_length=500, verbose_name='News Context')),
                ('news_link', models.CharField(blank=True, max_length=300, verbose_name='News Link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Content')),
                ('feature_image', models.ImageField(blank=True, upload_to='page_images', verbose_name='Featured Image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('logo', models.ImageField(upload_to='assets')),
                ('address', models.CharField(max_length=200, verbose_name='Address')),
                ('email', models.CharField(blank=True, max_length=200, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=200, verbose_name='Phone')),
                ('whatsapp', models.CharField(blank=True, max_length=200, verbose_name='Whatsapp')),
                ('facebook_url', models.CharField(blank=True, max_length=200, verbose_name='Facebook Url')),
                ('linkedin_url', models.CharField(blank=True, max_length=200, verbose_name='Linkedin Url')),
                ('instagram_url', models.CharField(blank=True, max_length=200, verbose_name='Instagram Url')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('sub_title', models.CharField(max_length=400, verbose_name='Sub Title')),
                ('position', models.IntegerField(default=0, verbose_name='Position')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='FooterMenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('link', models.CharField(max_length=200, verbose_name='Link')),
                ('position', models.IntegerField(default=0, verbose_name='Position')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='website.footermenuitem', verbose_name='Parent')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='NavigationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('link', models.CharField(max_length=200, verbose_name='Link')),
                ('position', models.IntegerField(default=0, verbose_name='Position')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='website.navigationitem', verbose_name='Parent')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
    ]
